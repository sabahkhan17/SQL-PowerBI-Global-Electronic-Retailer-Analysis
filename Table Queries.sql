CREATE TABLE SALES (
		ORDER_NUMBER INT,
		LINE_ITEM INT,
		ORDER_DATE DATE,
		DELIVERY_DATE DATE,
		CUSTOMER_KEY INT,
		STORE_KEY INT,
		PRODUCT_KEY INT,
		QUANTITY INT,
		CURRENCY_CODE VARCHAR(3),
		DELIVERY_STATUS VARCHAR(15)
)

CREATE TABLE CUSTOMERS (
		CUSTOMER_KEY INT,
		GENDER VARCHAR(10),
		NAME VARCHAR(40),
		CITY VARCHAR(40),
		STATE_CODE VARCHAR(50),
		STATE VARCHAR(30),
		ZIP_CODE VARCHAR(10),
		COUNTRY VARCHAR(40),
		CONTINENT VARCHAR(40),
		BIRTHDAY DATE
)

CREATE TABLE PRODUCTS (
		PRODUCT_KEY INT,
		PRODUCT_NAME VARCHAR(100),
		BRAND VARCHAR(25),
		COLOR VARCHAR(15),
		UNIT_COST_USD FLOAT,
		UNIT_PRICE_USD FLOAT,
		SUBCATEGORY_KEY INT,
		SUBCATEGORY VARCHAR(50),
		CATEGORY_KEY INT,
		CATEGORY VARCHAR(50)
)

CREATE TABLE STORES (
		STORE_KEY INT,
		COUNTRY VARCHAR(30),
		STATE VARCHAR(30),
		SQUARE_METERS INT,
		OPEN_DATE DATE
)

CREATE TABLE EXCHANGE_RATE (
		DATE DATE,
		CURENCY VARCHAR(10),
		EXCHANGE FLOAT
)

ALTER TABLE EXCHANGE_RATE RENAME TO EXCHANGE_RATES;
ALTER TABLE EXCHANGE_RATES RENAME COLUMN CURENCY TO CURRENCY;

--- defining primary keys ---

ALTER TABLE SALES ADD PRIMARY KEY (ORDER_NUMBER, LINE_ITEM);
ALTER TABLE CUSTOMERS ADD PRIMARY KEY (CUSTOMER_KEY);
ALTER TABLE PRODUCTS ADD PRIMARY KEY (PRODUCT_KEY);
ALTER TABLE STORES ADD PRIMARY KEY (STORE_KEY);
ALTER TABLE EXCHANGE_RATES ADD PRIMARY KEY (DATE, CURRENCY);


INSERT INTO STORES (STORE_KEY, Country, State, Square_Meters, Open_Date)
VALUES (0, 'Unknown', 'Unknown', 0, NULL);

--- defining foreign keys ---

ALTER TABLE SALES ADD CONSTRAINT FK_CUSTOMER_KEY
FOREIGN KEY (CUSTOMER_KEY) REFERENCES CUSTOMERS(CUSTOMER_KEY)

ALTER TABLE SALES ADD CONSTRAINT FK_STORE_KEY
FOREIGN KEY (STORE_KEY) REFERENCES STORES(STORE_KEY)

ALTER TABLE SALES ADD CONSTRAINT FK_PRODUCT_KEY
FOREIGN KEY (PRODUCT_KEY) REFERENCES PRODUCTS(PRODUCT_KEY)

ALTER TABLE SALES ADD CONSTRAINT fk_sales_currency
FOREIGN KEY (ORDER_DATE, CURRENCY_CODE) REFERENCES EXCHANGE_RATES(DATE, CURRENCY);

--- verifying foreign keys ---

SELECT conrelid::regclass AS table_name, conname, pg_get_constraintdef(oid) AS constraint_definition
FROM pg_constraint
WHERE contype = 'f';

